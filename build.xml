<?xml version="1.0" encoding="UTF-8"?>

<project name="Virgule" basedir="." default="build:main">
    <!-- Properties -->
    <property name="dir.fixtures" value="src/Virgule/Bundle/MainBundle/DataFixtures/ORM" />
    <property name="dir.app" value="${project.basedir}/app" />
    <property name="dir.src" value="${project.basedir}/src" />
    <property name="dir.build" value="${project.basedir}/build" />
    <property name="dir.reports" value="${dir.build}/reports" />
    <property name="dir.reports.coverage" value="${dir.reports}/coverage" />

    <!-- Command line properties -->
    <property name="resources.path" value="" />
    <property name="symfony.env" value="test" />
    <property name="demo.path" value="~/www/demo" />

    <!-- Filesets -->
    <fileset id="sourcecode" dir="${dir.src}">
        <include name="**/*.php" />
    </fileset>

    <!-- Default target -->
    <target name="build:main"
            depends="build:clean, build:configure, build:composer"
            description="" />

    <target name="build:demo"
            depends="build:main, demo:main, data:demo, sf:main" />

    <!-- Test target -->
    <target name="build:test"
            depends="build:main, build:prepare, data:test, test:unit"
            description="Executes all tests.." />

    <!-- Project build configure -->
    <target name="build:configure" description="Copy resources">
        <copy file="${resources.path}/parameters.ini" tofile="${dir.app}/config/parameters.ini" overwrite="true"/>
    </target>

    <!-- Project build clean -->
    <target name="build:clean" description="Clean up build directories.">
        <echo msg="Cleaning build directories ..." />
        <delete dir="${dir.build}" verbose="true" />
    </target>

    <!-- Project build prepare -->
    <target name="build:prepare" description="Create build directories.">
        <echo msg="Creating build directories ..." />
        <mkdir dir="${dir.build}" />
        <mkdir dir="${dir.reports}" />
        <mkdir dir="${dir.reports.coverage}" />
    </target>

    <!-- Unit tests -->
    <target name="test:unit" description="Executes unit tests.">
        <echo msg="Creating PHPUnit configuration file..." />
        <copy file="${dir.app}/phpunit.xml.dist" tofile="${dir.app}/phpunit.xml" overwrite="true"/>
        <echo msg="Running unit tests ..." />
        <exec command="php ${project.basedir}/vendor/bin/phpunit --log-junit ${dir.reports}/phpunit-results.xml --coverage-clover ${dir.reports.coverage}/clover.xml --coverage-html ${dir.reports.coverage}/ -c ${dir.app}"/>
    </target>

    <!-- Data -->
    <target name="data:test" depends="data:clean, data:create, data:load:test" description="Clean and load data for test environment" />
    <target name="data:demo" depends="data:clean, data:create, data:load:demo" description="Clean and load data for test environment" />

    <target name="data:clean" description="Droping database schema">
        <echo msg="Droping database schema in ${symfony.env} environment  ..." />
        <exec command="php ${dir.app}/console doctrine:schema:drop --force --env=${symfony.env}" />
    </target>

    <target name="data:create" description="Creating database schema">
        <echo msg="Creating database schema in ${symfony.env} environment ..." />
        <exec command="php ${dir.app}/console doctrine:schema:create --env=${symfony.env}" />
    </target>

    <target name="data:load:test" description="Loading application demo data">
        <echo msg="Loading application data in ${symfony.env} environment  ..." />
        <exec command="php ${dir.app}/console doctrine:fixtures:load --no-interaction --env=${symfony.env} --fixtures=${dir.fixtures}/App --fixtures=${dir.fixtures}/Test " />
    </target>
    <target name="data:load:demo" description="Loading application demo data">
        <echo msg="Loading application data in ${symfony.env} environment  ..." />
        <exec command="php ${dir.app}/console doctrine:fixtures:load --no-interaction --env=${symfony.env} --fixtures=${dir.fixtures}/App --fixtures=${dir.fixtures}/Demo " />
    </target>

    <!-- Composer -->
    <target name="build:composer"
           depends="composer:self-update, composer:install"
           description="Clean and load data" />

    <target name="composer:self-update" description="Composer: self-update">
        <echo msg="Composer: updating composer.phar ..." />
        <exec command="php composer.phar self-update"/>
    </target>

    <target name="composer:install" description="Composer: install dependencies">
        <echo msg="Composer: installing dependencies ..." />
        <exec command="php composer.phar install"/>
    </target>

    <!-- Symfony -->
    <target name="sf:main" depends="sf:assetic:dump, sf:cache:warmup" />
    <target name="sf:assetic:dump" description="Assetic dump">
        <echo msg="Dumping assets in ${symfony.env} environment  ..." />
        <exec command="php ${dir.app}/console assetic:dump --env=${symfony.env} --no-debug" />
    </target>
    <target name="sf:cache:warmup" description="Loading application demo data">
        <echo msg="Warming up cache in ${symfony.env} environment  ..." />
        <exec command="php ${dir.app}/console cache:warmup --env=${symfony.env}" />
    </target>

    <!-- Demo -->
    <target name="demo:main" depends="demo:clean, demo:copy-resources" />
    <target name="demo:clean">
        <echo msg="Cleaning demo directory ..." />
        <delete dir="${demo.path}/*" verbose="true" />
    </target>
    <target name="demo:install" >
        <echo msg="Copying demo app to wwww directory..." />
        <copy todir="${demo.path}/" >
          <fileset dir="${resources.path}/student_pictures">
            <include name="**/*.*" />
          </fileset>
        </copy>
    </target>
    <target name="demo:copy-resources" >
        <echo msg="Copying .htaccess file..." />
        <copy file="${resources.path}/file.htaccess" tofile="${demo.path}/web/.htaccess" overwrite="true"/>
        <chmod file="${demo.path}/web/uploads" mode="0777" />
        <echo msg="Copying student pictures..." />
        <copy todir="${demo.path}/web/uploads/student_pictures/" >
          <fileset dir="${resources.path}/student_pictures">
            <include name="**/*.*" />
          </fileset>
        </copy>
        <echo msg="Copying documents..." />
        <copy todir="${demo.path}/web/uploads/documents/" >
          <fileset dir="${resources.path}/documents">
            <include name="**/*.*" />
          </fileset>
        </copy>
    </target>
</project>
