<?php

namespace Virgule\Bundle\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ClassLevel
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends EntityRepository {
    
    /**
     * Count number of courses that overlap
     * $another_meeting = ($from >= $from_compare && $from <= $to_compare) || ($from_compare >= $from && $from_compare <= $to);
     * @param type $semesterId
     * @param type $dayOfWeek
     * @param type $classRoomId
     * @param type $startTime
     * @param type $endTime
     * @return type Integer
     */
    public function getNumberOfOverlapingCourses($semesterId, $dayOfWeek, $classRoomId, $startTime, $endTime) {
        $q = $this
            ->createQueryBuilder('c')
            ->where('c.fkSemesterId = :semesterId')
            ->andWhere('c.dayOfWeek = :dayOfWeek')
            ->andWhere('c.fkClassRoomId = :classRoomId')
            ->andWhere('(c.startTime > :startTime AND c.startTime < :endTime) OR (:startTime > c.startTime AND :startTime < c.endTime)')
            ->setParameter('semesterId', $semesterId)    
            ->setParameter('dayOfWeek', $dayOfWeek)
            ->setParameter('classRoomId', $classRoomId)
            ->setParameter('startTime', $startTime)
            ->setParameter('endTime', $endTime)                
            ->getQuery()
        ;
        $nb = $q->execute();
        return $nb;
    }
    
    public function getCoursesByTeacher($teacherId) {
        $q = $this
            ->createQueryBuilder('c')
            ->innerJoin('c.teachers', 't')
            ->andWhere('t.id = :teacherId')
            ->setParameter('teacherId', $teacherId)          
            ->getQuery()
        ;
        $nb = $q->execute();
        return $nb;
    }
}
